name: CI Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Cache Deno dependencies
        run: deno cache src/**/*.{ts,tsx} || echo "No Deno modules to cache"

      - name: Format Check
        run: deno fmt --check

      - name: Lint with Deno
        run: deno lint

      - name: Run Tests
        run: deno test -A --doc --coverage=cov_profile

      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: cov_profile

      - name: Build Frontend with Vite (via Deno)
        run: deno run -A npm:vite build

# Optional Deployment (uncomment and configure if needed)
# deploy:
#   name: Deploy to GitHub Pages
#   needs: build_and_test
#   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#   runs-on: ubuntu-latest
#
#   permissions:
#     contents: read
#     pages: write
#     id-token: write
#
#   environment:
#     name: github-pages
#     url: ${{ steps.deployment.outputs.page_url }}
#
#   steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4
#
#     - name: Set up Deno
#       uses: denoland/setup-deno@v1
#       with:
#         deno-version: v1.x
#
#     - name: Cache Deno dependencies
#       run: deno cache src/**/*.ts public/**/*.ts main.tsx App.tsx
#
#     - name: Build Project for Deployment
#       run: deno run -A npm:vite build
#
#     - name: Setup Pages
#       uses: actions/configure-pages@v4
#
#     - name: Upload Build Artifacts
#       uses: actions/upload-pages-artifact@v3
#       with:
#         path: ./dist
#
#     - name: Deploy
#       id: deployment
#       uses: actions/deploy-pages@v4
