-- Create class_enrollments table if it doesn't exist\nCREATE TABLE IF NOT EXISTS public.class_enrollments (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  class_id UUID NOT NULL REFERENCES public.classes(id) ON DELETE CASCADE,\n  student_id UUID NOT NULL REFERENCES public.students(id) ON DELETE CASCADE,\n  enrolled_date TIMESTAMPTZ DEFAULT NOW(),\n  status TEXT,\n  UNIQUE(class_id, student_id)\n);\n\n-- Add RLS policies for class_enrollments\nALTER TABLE public.class_enrollments ENABLE ROW LEVEL SECURITY;\n\nCREATE POLICY "Admins can manage enrollments" ON public.class_enrollments\n  FOR ALL TO authenticated\n  USING (EXISTS (SELECT 1 FROM public.profiles WHERE id = auth.uid() AND role = 'admin'))\n  WITH CHECK (EXISTS (SELECT 1 FROM public.profiles WHERE id = auth.uid() AND role = 'admin'));\n\nCREATE POLICY "Users can view their own enrollments" ON public.class_enrollments\n  FOR SELECT TO authenticated\n  USING (EXISTS (SELECT 1 FROM public.students WHERE id = student_id AND user_id = auth.uid()));
